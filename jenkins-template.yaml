apiVersion: v1
kind: Template
metadata:
  name: cicd-jenkins-std
labels:
  template: cicd-jenkins-std
  group: cicd
metadata:
  annotations:
    description: Creates the CI/CD infrastructure with Jenkins
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: cicd-jenkins-std
parameters:
- description: Jenkins Docker image to use.
  displayName: Jenkins Docker image
  name: JENKINS_IMAGE
  value: jalammas/jenkins-openshift-docker
- description: Jenkins service name.
  displayName: Jenkins Service Name
  name: JENKINS_SERVICE_NAME
  value: jenkins-std
- description: Password for the Jenkins user.
  displayName: Jenkins Password
  generate: expression
  name: JENKINS_PASSWORD
  value: password
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 512Mi
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
objects:
# Jenkins 
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: jenkins-std
    name: jenkins-std
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jenkins-std
    name: ${JENKINS_SERVICE_NAME}
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: jnlp
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      app: jenkins-std
      deploymentconfig: jenkins-std
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: jenkins-std
    name: jenkins-std
  spec:
    replicas: 1
    selector:
      app: jenkins-std
      deploymentconfig: jenkins-std
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          app: jenkins-std
          deploymentconfig: jenkins-std
      spec:
        containers:
        - env:
          - name: JENKINS_PASSWORD
            value: ${JENKINS_PASSWORD}
          image: ${JENKINS_IMAGE}
          imagePullPolicy: IfNotPresent
          name: jenkins-std
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 50000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          emptyDir:
            medium: ""
    test: false
    triggers:
    - type: ConfigChange

